{"ast":null,"code":"var _jsxFileName = \"/Users/samabdel/Desktop/untitled folder 2/scratcher-info/src/ScrollableColumn.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollableColumn = () => {\n  _s();\n  const [scratchers, setScratchers] = useState([]);\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/scratchers/best-odds?prices=1,2,3,5,10,20,30').then(response => response.json()).then(data => {\n      console.log(data); // Check the received data\n      setScratchers(data);\n    }).catch(error => console.log(error));\n  }, []);\n  console.log(scratchers); // Check the scratchers state\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scratchers-column\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"scratchers-table\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scratchers-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Odds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: scratchers.map(scratcher => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: scratcher.image,\n                alt: \"Scratcher\",\n                className: \"scratcher-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: scratcher.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", scratcher.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: scratcher.odds\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, scratcher.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollableColumn, \"Y4slpkgCJi5WBxpRbUPNRPZNeQk=\");\n_c = ScrollableColumn;\nexport default ScrollableColumn;\nvar _c;\n$RefreshReg$(_c, \"ScrollableColumn\");","map":{"version":3,"names":["ScrollableColumn","_s","scratchers","setScratchers","useState","useEffect","fetch","then","response","json","data","console","log","catch","error","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","scratcher","src","image","alt","name","price","odds","id","_c","$RefreshReg$"],"sources":["/Users/samabdel/Desktop/untitled folder 2/scratcher-info/src/ScrollableColumn.js"],"sourcesContent":["const ScrollableColumn = () => {\n  const [scratchers, setScratchers] = useState([]);\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/scratchers/best-odds?prices=1,2,3,5,10,20,30')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data); // Check the received data\n        setScratchers(data);\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  console.log(scratchers); // Check the scratchers state\n\n  return (\n    <div className=\"scratchers-column\">\n      <table className=\"scratchers-table\">\n      <div className=\"scratchers-column\">\n        <thead>\n          <tr>\n            <th>Image</th>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Odds</th>\n          </tr>\n        </thead>\n        <tbody>\n          {scratchers.map(scratcher => (\n            <tr key={scratcher.id}>\n              <td>\n                <img src={scratcher.image} alt=\"Scratcher\" className=\"scratcher-image\" />\n              </td>\n              <td>{scratcher.name}</td>\n              <td>${scratcher.price}</td>\n              <td>{scratcher.odds}</td>\n            </tr>\n          ))}\n        </tbody>\n    </div>\n      </table>\n    </div>\n  );\n};\n\nexport default ScrollableColumn"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}